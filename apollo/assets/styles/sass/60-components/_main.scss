/*------------------------------------*\
    #Main
\*------------------------------------*/
/**
1. We use left and right padding to add some minimum space between the
contents of <main> and the edges of the parent element or viewport.
To avoid making the content narrower than intended, we add an exception
to our global box-sizing rule.
 */

main,
#main {
	box-sizing: content-box /* 1 */;
	margin-left: auto;
	margin-right: auto;
	max-width: rem($max-width);
	padding: rem(50) 5vw 0 5vw;
	@include mq($bp-tab-small) {
		padding: rem(100) 10vw rem(50) 10vw;
	}
	@include mq(940) {
		background-image:url("/dist/assets/svg/strata-page-bg.svg");
		background-position-y: 100px;
		background-repeat: no-repeat;
		background-size: auto;
		background-position-x: 820px;
	}
	@include mq(1200) {
		background-position-x: 860px;
	}
	@include mq(1530) {
		background-position-x: 920px;
		background-size: 40%;
	}	
}

// main content sections
.main-intro {
	max-width: 45rem;
	@include stack;
}

.main-cta {
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	row-gap: 1rem;
	a.cta {
		margin-right: 1rem;
		border: solid rem(2) $strata-purple;
		border-radius: rem(28);
		padding: rem(10) rem(28);
		text-decoration: none;
		font-weight: 700;
		color: $strata-purple;
		transition: background-color ease-in-out 0.2s;
		&:visited {
			color: $strata-link-visited;
			border-color: $strata-link-visited;
		}
		&:hover,
		&:focus,
		&:active {
			color: white;
			border-color: $strata-text;
			background-color: $strata-text;
			outline-width: 0;
		}
	}
	@include mq($bp-tab-small) {
		flex-direction: row;
		align-items: center;

	}
}

.main-features {
	margin: rem(40) 0 rem(40) 0;
	@include mq($bp-tab-small) {
		margin: rem(80) 0 rem(80) 0;
	}
	ul {
		margin-top: rem(20);
		list-style: none;
		padding: 0;
		display: grid;

		@include mq(700) {
			// outline: solid 1px red;
			grid-template-columns: repeat(2, 300px);	 
			grid-auto-rows: minmax(300px, auto);
		}
		@include mq($bp-tab-large) {
			// outline: solid 1px green;
			grid-template-columns: repeat(3, 300px);	 
			grid-auto-rows: minmax(300px, auto);
		}
		@include mq($bp-desk) {
			// outline: solid 1px blue;
			grid-template-columns: repeat(4, 300px);	
		}
		@include mq(1620) {
			grid-template-columns: repeat(4, 325px);	
			grid-auto-rows: minmax(325px, auto);		
			// outline: solid 10px purple;
		}
		li {
			margin: 0;
			padding: 2rem;
			font-weight: 700;
			font-size: rem(16);
			line-height: 1.56;
			//nested grid
			display: grid;
			gap: 1rem;
			grid-template-columns: 23px auto;
			@include mq(699) {
				grid-template-columns: 1fr;
				grid-template-rows: 23px auto;
			}
			svg {
				height: rem(23);
				width: rem(23);
				fill: $strata-orange;
			}
			// checkerboard background patterns
			// 1 col from 0 to 699
			@media (min-width: em(0)) and (max-width: em(699)),
			// 3 cols from 1024 to 1439
			(min-width: em(1024)) and (max-width: em(1439)) {
				&:nth-child(odd) {
					background-color: white;		
					svg {
						fill: $strata-yellow;
					}
				}
			}
			// 2 cols from 700 to 1023
			@media (min-width: em(700)) and (max-width: em(1023)) {
				&:nth-child(1),
				&:nth-child(4),
				&:nth-child(5) {
					background-color: white;
					svg {
						fill: $strata-yellow;
					}
				}
			}
			// 4 cols from 1440
			@media (min-width: em(1440)) {
				&:nth-child(1),
				&:nth-child(3),
				&:nth-child(6) {
					background-color: white;
					svg {
						fill: $strata-yellow;
					}
				}
			}
			@include mq(1620) {
				font-size: rem(18);
			}
		}
	}
}

.main-used-by {
	margin: rem(40) 0 rem(40) 0;
	@include mq($bp-tab-small) {
		margin: rem(80) 0 rem(80) 0; 
	}
	ul {
		margin-top: rem(20);
		display: flex;
		flex-wrap: wrap;
		align-items: center;
		gap: rem(40);
		list-style: none;
		padding: 0;
		li {
			padding: 0;
			img {
				width: auto;
				height: 80px;
			}
		}
	}
}

.main-background {
	max-width: 45rem;	@include stack;
}
