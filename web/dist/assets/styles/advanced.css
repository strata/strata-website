/*------------------------------------*\
    #Apollo: advanced styles for browsers selected by mustard cut
\*------------------------------------*/
/*------------------------------------*\
    #Settings
\*------------------------------------*/
/*------------------------------------*\
    #Breakpoints

    The measurements presented here are for guidance only
    and should be updated to reflect the design/content needs.
\*------------------------------------*/
/*------------------------------------*\
    #Colors
\*------------------------------------*/
/**
Base colours that can be used when prototyping. Taken from http://clrs.cc/

1. We ideally avoid using pure white on pure black, because the contrast is
so great that it creates the illusion that text is vibrating on screen.
 */
/* 1 */
/* 1 */
/**
Social media colours that might be useful.
See: https://brandcolors.net/
 */
/* amiko-regular - latin */
@font-face {
  font-family: 'amiko-webfont';
  font-style: normal;
  font-weight: 400;
  src: local("Amiko Regular"), local("Amiko-Regular"), url("../fonts/Amiko-Regular-webfont.woff2") format("woff2"), url("../fonts/Amiko-Regular-webfont.woff") format("woff");
  /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */ }

/* amiko-semi-bold - latin */
@font-face {
  font-family: 'amiko-webfont';
  font-style: normal;
  font-weight: 600;
  src: local("Amiko Semi Bold"), local("Amiko-Semi-Bold"), url("../fonts/Amiko-SemiBold-webfont.woff2") format("woff2"), url("../fonts/Amiko-SemiBold-webfont.woff") format("woff");
  /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */ }

/* amiko-bold - latin */
@font-face {
  font-family: 'amiko-webfont';
  font-style: normal;
  font-weight: 700;
  src: local("Amiko Bold"), local("Amiko-Bold"), url("../fonts/Amiko-Bold-webfont.woff2") format("woff2"), url("../fonts/Amiko-Bold-webfont.woff") format("woff");
  /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */ }

/*------------------------------------*\
    #Paths
\*------------------------------------*/
/*------------------------------------*\
    #Sizes
\*------------------------------------*/
/**
A modular size scale, calculated using our base unit of measurement and
a ratio number taken from the base line-height as defined in /40-base/typography

We can reuse these sizes for margins and padding for visual harmony.
 */
/*------------------------------------*\
    #Typesetting
\*------------------------------------*/
/**
Use https://www.cssfontstack.com/ and https://meowni.ca/font-style-matcher/ to pick
system fonts that are reasonably close to any web fonts needed for the project.

This improves performance, avoids Flash Of Invisible Text (FOIT) and minimises
Flash of Unstyled Content (FOUC) - see https://helenvholmes.com/writing/type-is-your-right/

Be sure to include fonts for both Mac OS and Windows. Use quote marks around
fonts with white space in their name.

When Font Face Observer has detected that the @font-face files are loaded, then we
can safely use the web fonts instead of the system fonts.
 */
/*------------------------------------*\
    #Functions
\*------------------------------------*/
/*------------------------------------*\
    #Maths functions
\*------------------------------------*/
/**
 #Random number
 http://xkcd.com/221/
 */
/**
 #Power function
 https://css-tricks.com/snippets/sass/power-function/
 */
/**
 #Square root function
 */
/*------------------------------------*\
    #CSS unit functions
\*------------------------------------*/
/**
 #em
 */
/**
 #rem
 */
/**
 #px
 */
/**
 #Return a number without a unit
 */
/**
 #Remove any unit present to return a unitless number
 */
/*------------------------------------*\
    #Mixins
\*------------------------------------*/
/*------------------------------------*\
    #Font sizes
\*------------------------------------*/
/*------------------------------------*\
    #Media query
\*------------------------------------*/
/*------------------------------------*\
    #Stack (formerly axiomatic owl)
\*------------------------------------*/
/**
This mixin allows us to add vertical spacing between a container's direct children,
much like the 'axiomatic owl' but limited to specific use cases.

By applying Flexbox to the parent container, we can use auto margin on a specific
child element. This way, we can choose to group elements inside the stack to the
top/bottom of the vertical space, which is useful for card-like components.

The current default measure for the stack matches the base line-height,
as defined in /40-base/typography.

Use with a specific measure, or without for the default measure, e.g.

main {
	@include stack(4rem);
}

article {
	@include stack;
}
 */
/*------------------------------------*\
    #Layouts
\*------------------------------------*/
/*------------------------------------*\
    #Components
\*------------------------------------*/
/*------------------------------------*\
    #Global footer
\*------------------------------------*/
.global-footer {
  -ms-grid-row: 2;
      grid-row-start: 2;
  grid-row-end: 3; }
  .global-footer div {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
        flex-direction: column;
    -ms-flex-align: center;
        align-items: center;
    text-align: center;
    margin-left: auto;
    margin-right: auto;
    max-width: 81.25rem;
    box-sizing: content-box;
    padding: 1.7rem 5vw; }
    @media screen and (min-width: 40em) {
      .global-footer div {
        -ms-flex-direction: row;
            flex-direction: row;
        gap: 1rem;
        text-align: left; } }
    @media screen and (min-width: 48em) {
      .global-footer div {
        padding-left: 10vw;
        padding-right: 10vw; } }
    .global-footer div p {
      padding-top: 0.625rem;
      font-size: 1rem; }
    .global-footer div img {
      height: 2.5rem;
      width: auto; }

/*------------------------------------*\
    #Global header
\*------------------------------------*/
.global-header {
  background-color: #7342EC; }
  .global-header div {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
        flex-direction: column;
    row-gap: 0.5em;
    -ms-flex-pack: center;
        justify-content: center;
    -ms-flex-align: center;
        align-items: center;
    margin-left: auto;
    margin-right: auto;
    max-width: 81.25rem;
    box-sizing: content-box;
    padding: 1.7rem 5vw;
    color: white;
    font-size: 1.25rem; }
    @media screen and (min-width: 25em) {
      .global-header div {
        -ms-flex-direction: row;
            flex-direction: row;
        -ms-flex-line-pack: end;
            align-content: flex-end;
        -ms-flex-pack: justify;
            justify-content: space-between; } }
    @media screen and (min-width: 48em) {
      .global-header div {
        padding-left: 10vw;
        padding-right: 10vw; } }
  .global-header ul {
    display: -ms-flexbox;
    display: flex;
    column-gap: 1em;
    list-style: none;
    padding: 0; }
    .global-header ul li {
      margin: 0;
      padding: 0; }
  .global-header a:link,
  .global-header a:visited {
    text-decoration: none;
    color: white;
    border-bottom: solid 2px transparent;
    transition: border-color ease-in-out 0.2s; }
  .global-header a:hover {
    border-color: rgba(255, 255, 255, 0.5); }
  .global-header a:focus {
    outline-color: #fafafa; }
  .global-header a:hover,
  .global-header a:active {
    outline-width: 0; }
  .global-header img {
    height: 2.5rem;
    width: auto; }
    @media screen and (min-width: 20em) {
      .global-header img {
        height: 3.625rem; } }

/*------------------------------------*\
    #Main
\*------------------------------------*/
/**
1. We use left and right padding to add some minimum space between the
contents of <main> and the edges of the parent element or viewport.
To avoid making the content narrower than intended, we add an exception
to our global box-sizing rule.
 */
main,
#main {
  box-sizing: content-box;
  margin-left: auto;
  margin-right: auto;
  max-width: 81.25rem;
  padding: 3.125rem 5vw 0 5vw; }
  @media screen and (min-width: 48em) {
    main,
    #main {
      padding: 6.25rem 10vw 3.125rem 10vw; } }
  @media screen and (min-width: 58.75em) {
    main,
    #main {
      background-image: url("/dist/assets/svg/strata-page-bg.svg");
      background-position-y: 100px;
      background-repeat: no-repeat;
      background-size: auto;
      background-position-x: 820px; } }
  @media screen and (min-width: 75em) {
    main,
    #main {
      background-position-x: 860px; } }
  @media screen and (min-width: 95.625em) {
    main,
    #main {
      background-position-x: 920px;
      background-size: 40%; } }

.main-intro {
  max-width: 45rem;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-pack: start;
      justify-content: flex-start; }
  .main-intro > * + * {
    margin-top: 1.7rem; }

.main-cta {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-align: start;
      align-items: flex-start;
  row-gap: 1rem; }
  .main-cta a.cta {
    margin-right: 1rem;
    border: solid 0.125rem #7342EC;
    border-radius: 1.75rem;
    padding: 0.625rem 1.75rem;
    text-decoration: none;
    font-weight: 700;
    color: #7342EC;
    transition: background-color ease-in-out 0.2s; }
    .main-cta a.cta:visited {
      color: #1A1C1B;
      border-color: #1A1C1B; }
    .main-cta a.cta:hover, .main-cta a.cta:focus, .main-cta a.cta:active {
      color: white;
      border-color: #1A1C1B;
      background-color: #1A1C1B;
      outline-width: 0; }
  @media screen and (min-width: 48em) {
    .main-cta {
      -ms-flex-direction: row;
          flex-direction: row;
      -ms-flex-align: center;
          align-items: center; } }

.main-features {
  margin: 2.5rem 0 2.5rem 0; }
  @media screen and (min-width: 48em) {
    .main-features {
      margin: 5rem 0 5rem 0; } }
  .main-features ul {
    margin-top: 1.25rem;
    list-style: none;
    padding: 0;
    display: -ms-grid;
    display: grid; }
    @media screen and (min-width: 43.75em) {
      .main-features ul {
        -ms-grid-columns: (300px)[2];
            grid-template-columns: repeat(2, 300px);
        grid-auto-rows: minmax(300px, auto); } }
    @media screen and (min-width: 64em) {
      .main-features ul {
        -ms-grid-columns: (300px)[3];
            grid-template-columns: repeat(3, 300px);
        grid-auto-rows: minmax(300px, auto); } }
    @media screen and (min-width: 90em) {
      .main-features ul {
        -ms-grid-columns: (300px)[4];
            grid-template-columns: repeat(4, 300px); } }
    @media screen and (min-width: 101.25em) {
      .main-features ul {
        -ms-grid-columns: (325px)[4];
            grid-template-columns: repeat(4, 325px);
        grid-auto-rows: minmax(325px, auto); } }
    .main-features ul li {
      margin: 0;
      padding: 2rem;
      font-weight: 700;
      font-size: 1rem;
      line-height: 1.56;
      display: -ms-grid;
      display: grid;
      gap: 1rem;
      -ms-grid-columns: 23px auto;
          grid-template-columns: 23px auto; }
      @media screen and (min-width: 43.6875em) {
        .main-features ul li {
          -ms-grid-columns: 1fr;
              grid-template-columns: 1fr;
          -ms-grid-rows: 23px auto;
              grid-template-rows: 23px auto; } }
      .main-features ul li svg {
        height: 1.4375rem;
        width: 1.4375rem;
        fill: #FF5A5E; }
      @media (min-width: 0em) and (max-width: 43.6875em), (min-width: 64em) and (max-width: 89.9375em) {
        .main-features ul li:nth-child(odd) {
          background-color: white; }
          .main-features ul li:nth-child(odd) svg {
            fill: #FFBE4A; } }
      @media (min-width: 43.75em) and (max-width: 63.9375em) {
        .main-features ul li:nth-child(1), .main-features ul li:nth-child(4), .main-features ul li:nth-child(5) {
          background-color: white; }
          .main-features ul li:nth-child(1) svg, .main-features ul li:nth-child(4) svg, .main-features ul li:nth-child(5) svg {
            fill: #FFBE4A; } }
      @media (min-width: 90em) {
        .main-features ul li:nth-child(1), .main-features ul li:nth-child(3), .main-features ul li:nth-child(6) {
          background-color: white; }
          .main-features ul li:nth-child(1) svg, .main-features ul li:nth-child(3) svg, .main-features ul li:nth-child(6) svg {
            fill: #FFBE4A; } }
      @media screen and (min-width: 101.25em) {
        .main-features ul li {
          font-size: 1.125rem; } }

.main-used-by {
  margin: 2.5rem 0 2.5rem 0; }
  @media screen and (min-width: 48em) {
    .main-used-by {
      margin: 5rem 0 5rem 0; } }
  .main-used-by ul {
    margin-top: 1.25rem;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    -ms-flex-align: center;
        align-items: center;
    gap: 2.5rem;
    list-style: none;
    padding: 0; }
    .main-used-by ul li {
      padding: 0; }
      .main-used-by ul li img {
        width: auto;
        height: 80px; }

.main-background {
  max-width: 45rem;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-pack: start;
      justify-content: flex-start; }
  .main-background > * + * {
    margin-top: 1.7rem; }

/*------------------------------------*\
    #Plugins

    Add third-party plugins here.
\*------------------------------------*/
/*------------------------------------*\
    #Templates
\*------------------------------------*/
